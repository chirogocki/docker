---

# Prerequisite

- name: Ensure build dir
  file:
    path: "{{item}}"
    state: directory
    recurse: yes
    owner: '1024'
    group: '100'
  with_items:
    - "{{docker_conf_path}}/Build/swarmprom/cadvisor/armv7l"
  tags:
    - sp_cadvisor-dir

# Armv7l

- name: Log into private registry and force re-authorization
  docker_login:
    registry: registry.{{domain}}
    username: "{{registry_user}}"
    password: "{{registry_password}}"
    reauthorize: yes

- name: Template Dockerfile
  template:
    src: sp_cadvisor.Dockerfile.j2
    dest: "{{docker_conf_path}}/Build/swarmprom/cadvisor/armv7l/Dockerfile"
    owner: '1024'
    group: '100'

- name: Build an ARM image and push it to a private repo
  docker_image:
    build:
      path: "{{docker_conf_path}}/Build/swarmprom/cadvisor/armv7l"
      pull: yes
    name: registry.{{domain}}/sp_cadvisor
    tag: armv7l-v1
    push: yes
    source: build
  when: ansible_architecture == "armv7l"

# Amd64

- name: Pull amd64 image from dockerhub and push to private repo
  docker_image:
    name: google/cadvisor:v0.32.0
    repository: registry.{{domain}}/sp_cadvisor:x86_64-v1
    source: local
    push: yes
    pull: yes

- name: Create manifest to registry
  command: "docker manifest create --amend registry.{{domain}}/sp_cadvisor:latest registry.{{domain}}/sp_cadvisor:armv7l-v1 registry.{{domain}}/sp_cadvisor:x86_64-v1"

- name: Push manifest to registry
  command: "docker manifest push --purge registry.{{domain}}/sp_cadvisor:latest"

- name: Log out of private registry
  docker_login:
    registry: registry.{{domain}}
    state: absent