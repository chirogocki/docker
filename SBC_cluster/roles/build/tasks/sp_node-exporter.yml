---

# Prerequisite

- name: Ensure build dir
  file:
    path: "{{item}}"
    state: directory
    recurse: yes
    owner: '1024'
    group: '100'
  with_items:
    - "{{docker_conf_path}}/Build/swarmprom/node-exporter/conf"
  tags:
    - sp_node-exporter-dir

- name: Copy datasources files
  copy:
    src: "sp_node-exporter/docker-entrypoint.sh"
    dest: "{{docker_conf_path}}/Build/swarmprom/node-exporter/conf/docker-entrypoint.sh"
    owner: '1024'
    group: '100'
    mode: u+x
  tags:
    - sp_node-exporter_copy_datasources


# Armv7l

- name: Log into private registry and force re-authorization
  docker_login:
    registry: registry.{{domain}}
    username: "{{registry_user}}"
    password: "{{registry_password}}"
    reauthorize: yes

- name: Template Dockerfile
  template:
    src: sp_node-exporter.Dockerfile.j2
    dest: "{{docker_conf_path}}/Build/swarmprom/node-exporter/Dockerfile"
    owner: '1024'
    group: '100'

- name: Build an ARM image and push it to a private repo
  docker_image:
    build:
      path: "{{docker_conf_path}}/Build/swarmprom/node-exporter"
      pull: yes
    name: registry.{{domain}}/sp_node-exporter
    tag: armv7l-v1
    push: yes
    source: build
  when: ansible_architecture == "armv7l"

# Amd64

- block:
  - name: Touch dir
    file:
      path: "/etc/docker/certs.d/{{ registry_name }}.{{domain}}"
      state: directory
      recurse: yes
  - name: Trust CA
    copy:
      src: "/mount/docker/SSL/cert.crt"
      dest: "/etc/docker/certs.d/{{ registry_name }}.{{domain}}/ca.crt"
      remote_src: yes
  - name: Log into private registry
    docker_login:
      registry: registry.{{domain}}
      username: "{{registry_user}}"
      password: "{{registry_password}}"
      reauthorize: yes
  - name: Build an x86_64 image and push it to a private repo
    docker_image:
      build:
        path: "/mount/docker/Build/swarmprom/node-exporter"
      name: registry.{{domain}}/sp_node-exporter
      tag: x86_64-v1
      push: yes
      pull: no
      source: build
  - name: Log out of private registry
    docker_login:
      registry: registry.{{domain}}
      state: absent
    when: ansible_architecture == "x86_64"
  delegate_to: localhost


- name: Create manifest to registry
  command: "docker manifest create --amend registry.{{domain}}/sp_node-exporter:latest registry.{{domain}}/sp_node-exporter:armv7l-v1 registry.{{domain}}/sp_node-exporter:x86_64-v1"

- name: Push manifest to registry
  command: "docker manifest push --purge registry.{{domain}}/sp_node-exporter:latest"

- name: Log out of private registry
  docker_login:
    registry: registry.{{domain}}
    state: absent