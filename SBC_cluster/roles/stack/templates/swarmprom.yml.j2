version: "3.7"

networks:
  net:
    driver: overlay
    attachable: true
  traefik_public:
    external: true

volumes:
    prometheus:
      driver_opts:
        type: "nfs"
        o: "addr={{NAS1}},nolock,hard,rw"
        device: ":/{{docker_remote_path}}Swarmprom/volumes/prometheus"
    grafana:
      driver_opts:
        type: "nfs"
        o: "addr={{NAS1}},nolock,hard,rw"
        device: ":/{{docker_remote_path}}Swarmprom/volumes/grafana"
    alertmanager:
      driver_opts:
        type: "nfs"
        o: "addr={{NAS1}},nolock,hard,rw"
        device: ":/{{docker_remote_path}}Swarmprom/volumes/alertmanager"

configs:
  dockerd_config:
    file: {{docker_conf_path}}/Swarmprom/Caddyfile
  node_rules:
    file: {{docker_conf_path}}/Swarmprom/swarm_node.rules.yml
  task_rules:
    file: {{docker_conf_path}}/Swarmprom/swarm_task.rules.yml

services:
  dockerd-exporter:
    image: registry.{{domain}}/sp_caddy:latest
    networks:
      - net
    environment:
      - DOCKER_GWBRIDGE_IP=172.18.0.1
    configs:
      - source: dockerd_config
        target: /etc/caddy/Caddyfile
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
          cpus: '0.5'
        reservations:
          memory: 64M
          cpus: '0.25'

  cadvisor:
    image: registry.{{domain}}/sp_cadvisor:latest
    networks:
      - net
    command: -logtostderr -docker_only
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /:/rootfs:ro
      - /var/run:/var/run
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
          cpus: '1'
        reservations:
          memory: 64M
          cpus: '0.5'

  grafana:
    image: registry.{{domain}}/sp_grafana:latest
    networks:
      - net
      - default
      - traefik_public
    environment:
      - GF_SECURITY_ADMIN_USER={{swarmprom_user}}
      - GF_SECURITY_ADMIN_PASSWORD={{swarmprom_password}}
      - GF_USERS_ALLOW_SIGN_UP=false
      #- GF_SERVER_ROOT_URL=${GF_SERVER_ROOT_URL:-localhost}
      #- GF_SMTP_ENABLED=${GF_SMTP_ENABLED:-false}
      #- GF_SMTP_FROM_ADDRESS=${GF_SMTP_FROM_ADDRESS:-grafana@test.com}
      #- GF_SMTP_FROM_NAME=${GF_SMTP_FROM_NAME:-Grafana}
      #- GF_SMTP_HOST=${GF_SMTP_HOST:-smtp:25}
      #- GF_SMTP_USER=${GF_SMTP_USER}
      #- GF_SMTP_PASSWORD=${GF_SMTP_PASSWORD}
    volumes:
      - grafana:/var/lib/grafana
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 128M
          cpus: '0.25'
        reservations:
          memory: 64M
          cpus: '0.1'
      labels:
        - traefik.frontend.rule=Host:grafana.{{domain}}
        - traefik.tags=${TRAEFIK_PUBLIC_TAG:-traefik-public}
        - traefik.docker.network=traefik_public
        - traefik.port=3000

  alertmanager:
    image: registry.{{domain}}/sp_alertmanager:latest
    networks:
      - net
      - default
      - traefik_public
    environment:
      - SLACK_URL={{slack_url}}
      - SLACK_CHANNEL={{slack_channel}}
      - SLACK_USER={{slack_user}}
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    volumes:
      - alertmanager:/alertmanager
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 128M
          cpus: '0.25'
        reservations:
          memory: 64M
          cpus: '0.1'
      labels:
        - traefik.frontend.rule=Host:alertmanager.{{domain}}
        - traefik.port=9093
        - traefik.frontend.auth.forward.address=http://traefik-forward-auth:4181
        - traefik.frontend.auth.forward.trustForwardHeader=true
        - traefik.tags=${TRAEFIK_PUBLIC_TAG:-traefik-public}
        - traefik.docker.network=traefik_public

  unsee:
    image: registry.{{domain}}/sp_unsee:latest
    networks:
      - net
      - default
      - traefik_public
    environment:
      - "ALERTMANAGER_URI=http://alertmanager:9093"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 128M
          cpus: '0.25'
        reservations:
          memory: 64M
          cpus: '0.1'
      labels:
        - traefik.frontend.rule=Host:unsee.{{domain}}
        - traefik.port=8080
        - traefik.frontend.auth.forward.address=http://traefik-forward-auth:4181
        - traefik.frontend.auth.forward.trustForwardHeader=true
        - traefik.tags=${TRAEFIK_PUBLIC_TAG:-traefik-public}
        - traefik.docker.network=traefik_public

  node-exporter:
    image: registry.{{domain}}/sp_node-exporter:latest
    networks:
      - net
    environment:
      - NODE_ID={% raw %}{{.Node.ID}}{% endraw %} 
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /etc/hostname:/etc/nodename
    command:
      - '--path.sysfs=/host/sys'
      - '--path.procfs=/host/proc'
      - '--collector.textfile.directory=/etc/node-exporter/'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
      - '--no-collector.ipvs'
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
          cpus: '0.25'
        reservations:
          memory: 64M
          cpus: '0.1'

  prometheus:
    image: registry.{{domain}}/sp_prometheus:latest
    networks:
      - net
      - default
      - traefik_public
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention=24h'
    volumes:
      - prometheus:/prometheus
    configs:
      - source: node_rules
        target: /etc/prometheus/swarm_node.rules.yml
      - source: task_rules
        target: /etc/prometheus/swarm_task.rules.yml
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 768M
          cpus: '1'
        reservations:
          memory: 128M
          cpus: '0.5'
      labels:
        - traefik.frontend.rule=Host:prometheus.{{domain}}
        - traefik.port=9090
        - traefik.frontend.auth.forward.address=http://traefik-forward-auth:4181
        - traefik.frontend.auth.forward.trustForwardHeader=true
        - traefik.tags=${TRAEFIK_PUBLIC_TAG:-traefik-public}
        - traefik.docker.network=traefik_public

