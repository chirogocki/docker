version: "3.2"

services:
  traefik:
    image: traefik
    command: --web --docker --docker.swarmmode --docker.watch --docker.domain=w00t.ovh --logLevel=DEBUG
    # Note below that we use host mode to avoid source nat being applied to our ingress HTTP/HTTPS sessions
    # Without host mode, all inbound sessions would have the source IP of the swarm nodes, rather than the
    # original source IP, which would impact logging. If you don't care about this, you can expose ports the
    # "minimal" way instead
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      - target: 8080
        published: 8081
        protocol: tcp
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - {{docker_conf_path}}/Traefik:/etc/traefik
      - {{docker_conf_path}}/Traefik/traefik.log:/traefik.log
      - {{docker_conf_path}}/Traefik/acme.json:/acme.json
      - {{docker_conf_path}}/Traefik/traefik.toml:/traefik.toml:ro
      - {{docker_conf_path}}/Traefik/servers.toml:/servers.toml:ro
      - {{docker_conf_path}}/Traefik/tmp:/tmp
      - {{docker_conf_path}}/SSL:/etc/traefik/certs
    networks:
      - traefik_public
    # Global mode makes an instance of traefik listen on _every_ node, so that regardless of which
    # node the request arrives on, it'll be forwarded to the correct backend service.
    deploy:
      labels:
        - traefik.enable=true
        - traefik.frontend.rule=Host:traefik.{{domain}}
        - traefik.docker.network=traefik_public
        - traefik.port=8080
      mode: global
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure

networks:
  traefik_public:
    external: true
