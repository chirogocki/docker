version: "3.2"

services:
  traefik:
    image: traefik:v1.7.14
    command: --web --docker --docker.swarmmode --docker.watch --docker.domain=w00t.ovh --logLevel=INFO
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - {{docker_conf_path}}/Traefik-swarm:/etc/traefik
      - {{docker_conf_path}}/Traefik-swarm/acme.json:/acme.json
      - {{docker_conf_path}}/Traefik-swarm/traefik-swarm.toml:/traefik.toml:ro
      - {{docker_conf_path}}/Traefik-swarm/servers.toml:/servers.toml:ro
      - {{docker_conf_path}}/SSL:/etc/traefik/certs:ro
    networks:
      - traefik_public
    deploy:
      endpoint_mode: dnsrr
      labels:
        - traefik.enable=true
        - traefik.frontend.rule=Host:traefik-swarm.{{domain}}
        - traefik.docker.network=traefik_public
        - traefik.port=8080
        - "traefik.frontend.headers.SSLRedirect=true"
        - "traefik.frontend.headers.STSSeconds=315360000"
        - "traefik.frontend.headers.browserXSSFilter=true"
        - "traefik.frontend.headers.contentTypeNosniff=true"
        - "traefik.frontend.headers.forceSTSHeader=true"
        - "traefik.frontend.headers.SSLHost={{domain}}"
        - "traefik.frontend.headers.STSIncludeSubdomains=true"
        - "traefik.frontend.headers.STSPreload=true"
        - "traefik.frontend.headers.frameDeny=true"
      mode: global
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure

networks:
  traefik_public:
    external: true
