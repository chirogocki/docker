version: "3.7"

services:
  traefik:
    image: traefik:v2.0
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    secrets:
      - source: cert.pem
        target: /etc/traefik/certs/cert.crt
      - source: privkey.pem
        target: /etc/traefik/certs/privkey.key
    networks:
      - network
    configs:
      - source: traefik.yml
        target: /etc/traefik/traefik.yml
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.traefik-unsecure.rule=Host(`traefik-swarm.{{domain}}`)"
        - "traefik.http.routers.traefik-unsecure.middlewares=redirect@file"
        - "traefik.http.routers.traefik-unsecure.entrypoints=http"
        - "traefik.http.routers.traefik.rule=Host(`traefik-swarm.{{domain}}`)"
        - "traefik.http.routers.traefik.tls=true"
        - "traefik.http.routers.traefik.entrypoints=https"
        - "traefik.http.services.traefik.loadbalancer.server.port=8080"
      mode: global
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure

secrets:
  cert.pem:
    external: true
  privkey.pem:
    external: true

configs:
  traefik.yml:
    file: {{docker_conf_path}}/Traefik2S/traefik.yml

networks:
  network:
    driver: overlay
    attachable: true


# Deploy
# # Traefik
# export TRAEFIK_UI_TRAEFIK_URI=traefik-dev.
# export GRAFANA_UI_TRAEFIK_URI=traefik-grafana-dev.

# # Versions
# export TRAEFIK_VERSION=v2.0
# export PROMETHEUS_VERSION=v2.12.0
# export GRAFANA_VERSION=6.3.6

# # Volumes
# export TRAEFIK_PROMETHEUS_VOLUME=dev-traefik-prometheus
# export TRAEFIK_GRAFANA_VOLUME=dev-traefik-grafana

# docker stack deploy -c docker-compose.yml --resolve-image=always --prune --with-registry-auth traefik

